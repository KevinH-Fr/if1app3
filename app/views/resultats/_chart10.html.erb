test chart 10


 <% @saisonId = params[:saisonId] %>
 <% @divisionId = Event.find(@eventId).division_id %> 
 <% @eventNum = Event.find(@eventId).numero %>
 <% @numGp = Event.find(@eventId).numero  %>

<% @labels = Event.where(saison_id: @saisonId, division_id: @divisionId).numero_until_courant(@numGp).pluck(:numero)  %> 
<br>
liste pilotes : <br>
<% @listePilotes = Pilote.division_courant(@divisionId).pluck(:id, :nom) %> <br>
<br>

comptePilotes : <%= @listePilotes.count %> <br>
pilote1: <%= @listePilotes[0][0] %> <br>
pilote2: <%= @listePilotes[1][0] %> <br>
pilote3: <%= @listePilotes[2][0] %> <br>
pilote4: <%= @listePilotes[3][0] %> <br>
pilote5: <%= @listePilotes[4][0] %> <br>

<% @piloteId1 = @listePilotes[0][0] %>
<% @piloteId2 = @listePilotes[1][0] %>
<% @piloteId3 = @listePilotes[2][0] %>
<% @piloteId4 = @listePilotes[3][0] %>
<% @piloteId5 = @listePilotes[4][0] %>

<%= @piloteNom1 = Pilote.find(@piloteId1).nom %> <br>
<%= @piloteNom2 = Pilote.find(@piloteId2).nom %> <br>
<%= @piloteNom3 = Pilote.find(@piloteId3).nom %> <br>
<%= @piloteNom4 = Pilote.find(@piloteId4).nom %> <br>
<%= @piloteNom5 = Pilote.find(@piloteId5).nom %> <br>

<%# permet d'avoir les resultats du pilote 5 a chaque gp sans somme %>
data1 : <%= @data1 = Resultat.where(pilote_id: @piloteId1).division_courant(@divisionId).saison_courant(@saisonId).numero_until_courant(@numGp).pluck(:score).map!(&:to_i) %> <br>
data2 : <%= @data2 = Resultat.where(pilote_id: @piloteId2).division_courant(@divisionId).saison_courant(@saisonId).numero_until_courant(@numGp).pluck(:score).map!(&:to_i) %> <br>
data3 : <%= @data3 = Resultat.where(pilote_id: @piloteId3).division_courant(@divisionId).saison_courant(@saisonId).numero_until_courant(@numGp).pluck(:score).map!(&:to_i) %> <br>
data4 : <%= @data4 = Resultat.where(pilote_id: @piloteId4).division_courant(@divisionId).saison_courant(@saisonId).numero_until_courant(@numGp).pluck(:score).map!(&:to_i) %> <br>
data5 : <%= @data5 = Resultat.where(pilote_id: @piloteId5).division_courant(@divisionId).saison_courant(@saisonId).numero_until_courant(@numGp).pluck(:score).map!(&:to_i) %> <br>



<div>
  <canvas id="myChart" width="20px" height="10px" ></canvas> 
</div>

<script>

var labels = <%= @labels %>;

var data1 = <%= @data1 %>;
var data2 = <%= @data2 %>;
var data3 = <%= @data3 %>;
var data4 = <%= @data4 %>;
var data5 = <%= @data5 %>;

var couleur1 = 'rgb(255, 99, 132)';
var couleur2 = 'rgb(100, 99, 132)';
var couleur3 = 'rgb(120, 99, 20)';
var couleur4 = 'rgb(150, 150, 132)';
var couleur5 = 'rgb(50, 100, 120)';

  const data = {
    labels: labels,
   
    datasets: [
          
    {
      label: "<%= @piloteNom1 %>",
      backgroundColor: couleur1,
      borderColor: couleur1,
      data: data1,
    },

    {
      label: "<%= @piloteNom2 %>",
      backgroundColor: couleur2,
      borderColor: couleur2,
      data: data2,
    },

    {
      label: "<%= @piloteNom3 %>",
      backgroundColor: couleur3,
      borderColor: couleur3,
      data: data3,
    },

        {
      label: "<%= @piloteNom4 %>",
      backgroundColor: couleur4,
      borderColor: couleur4,
      data: data4,
    },

        {
      label: "<%= @piloteNom5 %>",
      backgroundColor: couleur5,
      borderColor: couleur5,
      data: data5,
    }


    ]
  };
    let delayed;
    const config = {
        type: 'line',
        data: data,
        options: {
            animation: {
                onComplete: () => {
                    delayed = true;
                },
                delay: (context) => {
                    let delay = 0;
                    if (context.type === 'data' && context.mode === 'default' && !delayed) {
                    delay = context.dataIndex * 1500  + context.datasetIndex * 100;
                    }
                    return delay;
                },
            },

            borderColor:"#308af3",
            pointBackgroundColor: "#308af3",
            pointBorderWidth: 10,
            pointHoverBackgroundColor: "#fff",
            pointHoverBorderWidth: 2,
            lineTension: 0.4,
            borderWidth: 6,
            scales: {
                y: {
                    beginAtZero: true,
                }
            }
        }
    };
</script>

<script>
  const myChart = new Chart(
    document.getElementById('myChart'),
    config
  );
</script>
