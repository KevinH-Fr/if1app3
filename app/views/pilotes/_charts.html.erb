
    <style>
      * {
        margin: 0;
        padding: 0;
        font-family: sans-serif;
      }
    
      .chartMenu p {
        padding: 10px;
        font-size: 20px;
      }
      .chartCard {
        width: 100%;
        height: 5%;
       /* background: rgba(255, 26, 104, 0.2);*/
       /* display: flex; */
        align-items: center;
        justify-content: center;
      }
      .chartBox {
        width: 100;
        padding: 20px;
        margin: 10px;
        border-radius: 20px;
        border: solid 2px rgba(50, 50, 50, 1);
        background: white;
      }
    </style>


    <div class="chartCard">
      <div class="chartBox">
        <canvas id="myChart"></canvas>
      </div>
      <div class="chartBox">
        <canvas id="myChartLine"></canvas>
      </div>
    </div>

<% @piloteId = params[:id] %>

<% @nbVictoire = Resultat.pilote_courant(@piloteId).compte_p1 %>
<% @nbPodium = Resultat.pilote_courant(@piloteId).compte_podium %>
<% @nbTop5 = Resultat.pilote_courant(@piloteId).compte_top5 %>
<% @nbTop10 = Resultat.pilote_courant(@piloteId).compte_top10 %>

<% @data = [@nbVictoire, @nbPodium, @nbTop5, @nbTop10] %>
<% @labels = Resultat.joins(:event).where(pilote_id: @piloteId).pluck(:numero)  %> 
<% @data1 =  Resultat.joins(:event).where(pilote_id: @piloteId).pluck(:score).map!(&:to_i)  %> 

    <script>
   
    var couleurVictoire =  'rgb(233, 222, 61)';
    var couleurPodium = 'rgb(205, 127, 50)';
    var couleurTop5 =  'rgb(54, 162, 235)';
    var couleurTop10 =  'rgb(82, 189, 93)';

// CHART donut
    const data = {
      labels: ['Victoire', 'Podium', 'Top5', 'Top10'],
      datasets: [{
      
        data: <%= @data.to_json.html_safe %>,
        backgroundColor: [
          couleurVictoire, couleurPodium, couleurTop5, couleurTop10
        ],
       
        borderColor: [
          'rgba(0, 0, 0, 1)'
        ],
        hoverOffset: 40, 
        borderWidth: 2
      }]
    };

    // config 
    const config = {
      type: 'doughnut',
     
      data,
      options: {
          animation:{
            animateRotate: true,
            duration: 5000
         },
        scales: {
          y: {
            beginAtZero: true,
            display: false
          }
        }
      }
    };

        // render init block
    const myChart = new Chart(
      document.getElementById('myChart'),
      config
    );

var labels = <%= @labels %>;
var data1 = <%= @data1 %>;

    // line
    const dataLine = {
      labels: labels,
      datasets: [{
        label: 'score',
        data:  data1,
        fill: true,
        backgroundColor: 'rgba(255, 99, 132, 0.2)',
        backgroundColor: [
          'rgba(0, 0, 100, 0.2)'
        ],
        borderColor: [
          'rgba(0, 0, 100, 1)'
        ],
        borderWidth: 4
      }]
    };



// CHART LINE
        let delayed;

    const configLine = {
      type: 'line',
      data: dataLine,
      options: {
        aspectRatio: 1,

        animation: {
                onComplete: () => {
                    delayed = true;
                },
                delay: (context) => {
                    let delay = 0;
                    if (context.type === 'data' && context.mode === 'default' && !delayed) {
                    delay = context.dataIndex * 1500  + context.datasetIndex * 100;
                    }
                    return delay;
                },
            },
           
            borderColor:"#308af3",
           /* pointBackgroundColor: "#308af3",*/
            pointBorderWidth: 10,
           /* pointHoverBackgroundColor: "#fff", */
            pointHoverBorderWidth: 20,
            lineTension: 0.4,

            scales: {
              y: {
                ticks: {
                  font: {
                    size: 16
                  },     
                },
              beginAtZero: true,
                title: {
                  display: true,
                  text: 'Points',
                  font: {
                    size: 18
                  },
                }
              },
              x: {
                ticks: {
                  font: {
                    size: 16
                  },  
                   /* callback: function(value, index, ticks) {
                        return 'GP ' + value ;*/
                },
                title: {
                  display: true,
                  text: 'GP',
                  font: {
                    size: 18
                  },
                }
              },
            }
          }
      };

        // render init block
    const myChartLine = new Chart(
      document.getElementById('myChartLine'),
      configLine
    );

  

    </script>
