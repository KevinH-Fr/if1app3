

<div>
  <canvas id="myChart" width="20px" height="10px" ></canvas> 
</div>


event : <%= @eventId = params[:eventId] %> <br>
saison : <%= @saisonId = params[:saisonId] %> <br>
division : <%= @divisionId = params[:divisionId] %> <br>
numgp : <%= @numeroGp = params[:numGp] %> <br>

<hr>
<% @listeGp = Event.saison_courant(@saisonId).division_courant(@divisionId).numero_until_courant(@numeroGp) %>

 <% @listeGp.each do | gp | %>
    <%= gp.numero %>
 <% end %>

<hr>

<script>

  const labels = [
   'gp1',
   'gp2',
   'gp3',
   'gp4',
   'gp5',
   'gp6',
  ];

  const data = {
    labels: labels,
    datasets: [{
      label: "iF1 ViperZ",
      fill: false,
      backgroundColor: 'rgb(255, 99, 132)',
      borderColor: 'rgb(255, 99, 132)',
      data: [10, 15, 28, 36, 40, 45],
     
    }]
  };

    let delayed;
    const config = {
    type: 'line',
    data: data,
    options: {
        radius: 5,
        hitRadius: 30,
        hoverRadius: 12,
        responsive: true,

        animation: {
        onComplete: () => {
            delayed = true;
        },
        delay: (context) => {
            let delay = 0;
            if (context.type === 'data' && context.mode === 'default' && !delayed) {
            delay = context.dataIndex * 300 + context.datasetIndex * 100;
            }
            return delay;
        },
        },
        scales: {
        x: {
            stacked: true,
        },
        y: {
            stacked: true
        }
        }
    }
    };
</script>


<script>
  const myChart = new Chart(
    document.getElementById('myChart'),
    config
  );
</script>
